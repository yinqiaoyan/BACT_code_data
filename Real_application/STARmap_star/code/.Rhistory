# Rcpp::sourceCpp(paste0(CodePath, 'utils_Rcpp_Generate_and_EB_anotherSolveEq.cpp'))
# Rcpp::sourceCpp(paste0(CodePath, 'test.cpp'))
# Y_mat = GenerateYmat(p, G, ni, dists, mu_true_mat, gamma_true_mat, delta2_true_mat,
#                      eta2_true_mat, true_labels, alpha_g_true, sigma2_g, LambdaFunc_type)
Y_mat = GenerateYmat_AllTrueVals(p, G, ni, dists, mu_true_val, gamma_true_val, delta2_true_val,
eta2_true_val, true_labels, alpha_g_true, sigma2_g, LambdaFunc_type)
GenerateY_type = "AllTrueVals"  # "AllGeneSpecific", "AllTrueVals", "MuTrueVals"
cat(paste0("GenerateY_type: ", GenerateY_type, "\n"))
Y_mat = GenerateYmat_AllTrueVals(p, G, ni, dists, mu_true_val, gamma_true_val, delta2_true_val,
eta2_true_val, true_labels, alpha_g_true, sigma2_g, LambdaFunc_type)
### --- heatmap --- ###
# 导入 ggplot2 库
library(ggplot2)
### --- End of heatmap --- ###
tmp_nrows = 1000
tmpMatrix = matrix(nrow=tmp_nrows, ncol = 300)
tmpMatrix[, 1:100] = rnorm(tmp_nrows*100, mean=0, sd = 0.1)
tmpMatrix[, 101:200] = rnorm(tmp_nrows*100, mean=2, sd = 0.1)
tmpMatrix[, 201:300] = rnorm(tmp_nrows*100, mean=-2, sd = 0.1)
cor_matrix <- cor(tmpMatrix)
cor_df <- as.data.frame(cor_matrix)
cor_df$row <- rownames(cor_df)  # 添加行名
cor_df <- tidyr::gather(cor_df, col, value, -row)  # 转换为长格式
cor_df$row = factor(cor_df$row, levels=rev(unique(cor_df$row)))
cor_df$col = factor(cor_df$col, levels=unique(cor_df$col))
# 绘制热图
pheatmap <- ggplot(cor_df, aes(x = col, y = row, fill = value)) +
geom_tile() +  # 添加热图
# scale_fill_gradient2(low = "#1E88E5", mid = "#FFFFFF", high = "#D82F2F",
#                       midpoint = median(cor_df$value)) +
scale_fill_gradient2(low = "#1E88E5", mid = "#FFFFFF", high = "#D82F2F",
midpoint = 0, breaks = c(-1, 0, 1)) +
labs(title = "Correlation Heatmap", x = "Column", y = "Row", fill = "Correlation") +  # 添加标题和标签
scale_x_discrete(position = "top")
pheatmap
### --- End of heatmap --- ###
tmp_nrows = 1000
tmpMatrix = matrix(nrow=tmp_nrows, ncol = 300)
tmpMatrix[, 1:100] = rnorm(tmp_nrows*100, mean=0, sd = 0.1)
tmpMatrix[, 101:200] = rnorm(tmp_nrows*100, mean=0.1, sd = 0.1)
tmpMatrix[, 201:300] = rnorm(tmp_nrows*100, mean=-0.1, sd = 0.1)
cor_matrix <- cor(tmpMatrix)
cor_df <- as.data.frame(cor_matrix)
cor_df$row <- rownames(cor_df)  # 添加行名
cor_df <- tidyr::gather(cor_df, col, value, -row)  # 转换为长格式
cor_df$row = factor(cor_df$row, levels=rev(unique(cor_df$row)))
cor_df$col = factor(cor_df$col, levels=unique(cor_df$col))
# 绘制热图
pheatmap <- ggplot(cor_df, aes(x = col, y = row, fill = value)) +
geom_tile() +  # 添加热图
# scale_fill_gradient2(low = "#1E88E5", mid = "#FFFFFF", high = "#D82F2F",
#                       midpoint = median(cor_df$value)) +
scale_fill_gradient2(low = "#1E88E5", mid = "#FFFFFF", high = "#D82F2F",
midpoint = 0, breaks = c(-1, 0, 1)) +
labs(title = "Correlation Heatmap", x = "Column", y = "Row", fill = "Correlation") +  # 添加标题和标签
scale_x_discrete(position = "top")
pheatmap
### --- End of heatmap --- ###
tmp_nrows = 1000
tmpMatrix = matrix(nrow=tmp_nrows, ncol = 300)
mu_true_val = c(0, 2, -2)
K=3
mu_true_mat = matrix(0, nrow = tmp_nrows, ncol = K)
for (k in 2:K) {
mu_true_mat[, k] = rnorm(G, mean=mu_true_val[k], sd=0.1)
}
mu_true_mat = matrix(0, nrow = tmp_nrows, ncol = K)
for (k in 2:K) {
mu_true_mat[, k] = rnorm(tmp_nrows, mean=mu_true_val[k], sd=0.1)
}
View(mu_true_mat)
tmpMatrix = matrix(nrow=tmp_nrows, ncol = 300)
for (g in 1:tmp_nrows) {
tmpMatrix[g, 1:100] = rnorm(100, mean=mu_true_mat[g, 1], sd = 0.1)
tmpMatrix[g, 101:200] = rnorm(100, mean=mu_true_mat[g, 2], sd = 0.1)
tmpMatrix[g, 201:300] = rnorm(100, mean=mu_true_mat[g, 3], sd = 0.1)
}
cor_matrix <- cor(tmpMatrix)
cor_df <- as.data.frame(cor_matrix)
cor_df$row <- rownames(cor_df)  # 添加行名
cor_df <- tidyr::gather(cor_df, col, value, -row)  # 转换为长格式
cor_df$row = factor(cor_df$row, levels=rev(unique(cor_df$row)))
cor_df$col = factor(cor_df$col, levels=unique(cor_df$col))
# 绘制热图
pheatmap <- ggplot(cor_df, aes(x = col, y = row, fill = value)) +
geom_tile() +  # 添加热图
# scale_fill_gradient2(low = "#1E88E5", mid = "#FFFFFF", high = "#D82F2F",
#                       midpoint = median(cor_df$value)) +
scale_fill_gradient2(low = "#1E88E5", mid = "#FFFFFF", high = "#D82F2F",
midpoint = 0, breaks = c(-1, 0, 1)) +
labs(title = "Correlation Heatmap", x = "Column", y = "Row", fill = "Correlation") +  # 添加标题和标签
scale_x_discrete(position = "top")
pheatmap
for (g in 1:tmp_nrows) {
tmpMatrix[g, 1:100] = rnorm(100, mean=mu_true_mat[g, 1], sd = 1)
tmpMatrix[g, 101:200] = rnorm(100, mean=mu_true_mat[g, 2], sd = 1)
tmpMatrix[g, 201:300] = rnorm(100, mean=mu_true_mat[g, 3], sd = 1)
}
cor_matrix <- cor(tmpMatrix)
cor_df <- as.data.frame(cor_matrix)
cor_df$row <- rownames(cor_df)  # 添加行名
cor_df <- tidyr::gather(cor_df, col, value, -row)  # 转换为长格式
cor_df$row = factor(cor_df$row, levels=rev(unique(cor_df$row)))
cor_df$col = factor(cor_df$col, levels=unique(cor_df$col))
# 绘制热图
pheatmap <- ggplot(cor_df, aes(x = col, y = row, fill = value)) +
geom_tile() +  # 添加热图
# scale_fill_gradient2(low = "#1E88E5", mid = "#FFFFFF", high = "#D82F2F",
#                       midpoint = median(cor_df$value)) +
scale_fill_gradient2(low = "#1E88E5", mid = "#FFFFFF", high = "#D82F2F",
midpoint = 0, breaks = c(-1, 0, 1)) +
labs(title = "Correlation Heatmap", x = "Column", y = "Row", fill = "Correlation") +  # 添加标题和标签
scale_x_discrete(position = "top")
pheatmap
for (g in 1:tmp_nrows) {
tmpMatrix[g, 1:100] = rnorm(100, mean=mu_true_mat[g, 1], sd = 0.1)
tmpMatrix[g, 101:200] = rnorm(100, mean=mu_true_mat[g, 2], sd = 0.1)
tmpMatrix[g, 201:300] = rnorm(100, mean=mu_true_mat[g, 3], sd = 0.1)
}
cor_matrix <- cor(tmpMatrix)
cor_df <- as.data.frame(cor_matrix)
cor_df$row <- rownames(cor_df)  # 添加行名
cor_df <- tidyr::gather(cor_df, col, value, -row)  # 转换为长格式
cor_df$row = factor(cor_df$row, levels=rev(unique(cor_df$row)))
cor_df$col = factor(cor_df$col, levels=unique(cor_df$col))
# 绘制热图
pheatmap <- ggplot(cor_df, aes(x = col, y = row, fill = value)) +
geom_tile() +  # 添加热图
# scale_fill_gradient2(low = "#1E88E5", mid = "#FFFFFF", high = "#D82F2F",
#                       midpoint = median(cor_df$value)) +
scale_fill_gradient2(low = "#1E88E5", mid = "#FFFFFF", high = "#D82F2F",
midpoint = 0, breaks = c(-1, 0, 1)) +
labs(title = "Correlation Heatmap", x = "Column", y = "Row", fill = "Correlation") +  # 添加标题和标签
scale_x_discrete(position = "top")
pheatmap
remotes::install_github("yezhengSTAT/ADTnorm", build_vignettes = FALSE)
install.packages("fda")
remotes::install_github("yezhengSTAT/ADTnorm", build_vignettes = FALSE)
library(ADTnorm)
ari_bact = c(0.382, 0.272, 0.366, 0.448, 0.496)  # 2k-4k
ari_spagcn = c(0.274, 0.270, 0.242, 0.264, 0.298)
ari_stagate = c(0.054, 0.072, 0.077, 0.080, 0.073)
ari_banksy = c(0.119, 0.078, 0.094, 0.091, 0.059)
median(ari_bact)
median(ari_spagcn)
median(ari_stagate)
median(ari_banksy)
library(readr)
# 如果.beta文件是逗号分隔的
beta_data <- read_csv("/Users/yyq/Documents/MyDocument/project/沈逸 beta mixture/data/GSM5652176_Adipocytes-Z000000T7.beta")
View(beta_data)
# 如果.beta文件是制表符分隔的
beta_data <- read_tsv("/Users/yyq/Documents/MyDocument/project/沈逸 beta mixture/data/GSM5652176_Adipocytes-Z000000T7.beta")
View(beta_data)
# 如果.beta文件是制表符分隔的
beta_data <- read_table("/Users/yyq/Documents/MyDocument/project/沈逸 beta mixture/data/GSM5652176_Adipocytes-Z000000T7.beta")
View(beta_data)
remove(beta_data)
# 如果.beta文件是制表符分隔的
beta_data <- read_table("/Users/yyq/Documents/MyDocument/project/沈逸 beta mixture/data/GSM5652176_Adipocytes-Z000000T7.beta")
fname <- "/Users/yyq/Documents/MyDocument/project/沈逸 beta mixture/data/GSM5652176_Adipocytes-Z000000T7.beta"
N <- file.info(fname)$size
content <- matrix(readBin(fname, "integer", N, size = 1, signed = FALSE), N / 2, 2, byrow=TRUE)
View(content)
dims(content)
N
dim(content)
max(content)
fname <- "/Users/yyq/Documents/MyDocument/project/沈逸 beta mixture/data/GSM5652176_Adipocytes-Z000000T7.hg38.beta"
N <- file.info(fname)$size
N
content <- matrix(readBin(fname, "integer", N, size = 1, signed = FALSE), N / 2, 2, byrow=TRUE)
fname <- "/Users/yyq/Documents/MyDocument/project/沈逸 beta mixture/data/GSM5652179_Aorta-Endothel-Z00000422.hg38.beta"
N <- file.info(fname)$size
content <- matrix(readBin(fname, "integer", N, size = 1, signed = FALSE), N / 2, 2, byrow=TRUE)
View(content)
dat = read.csv("/Users/yyq/Documents/MyDocument/project/沈逸 beta mixture/data/GSM3070589_allc_Pool_1681_AD010_indexed.tsv")
dat = read.csv("/Users/yyq/Documents/MyDocument/project/沈逸 beta mixture/data/GSM3070589_allc_Pool_1681_AD010_indexed.tsv", sep = "\t", header = TRUE)
View(dat)
library(data.table)
bed_data <- fread("/Users/yyq/Documents/MyDocument/project/沈逸 beta mixture/data/GSM683759_hg19_wgEncodeHaibMethylRrbsBcleukocyteuhn00204BiochainSitesRep2.bedRrbs")
View(bed_data)
SticksToPi
install.packages("/Users/yyq/Documents/MyDocument/project/image (Bioinformatics)/code/Rpkg/BACT1.0/BACT_1.0.tar.gz", repos = NULL, type="source")
library(BACT)
RootPath = "/Users/yyq/Documents/MyDocument/project/image (Bioinformatics)/code/Rpkg/test_data/"
coord = read.csv(paste0(RootPath, "coordinates.csv"))
geneData_raw = read.csv(paste0(RootPath, "gene_count_matrix_raw.csv"))
### preprocess gene expression matrix
spotLoc_char = geneData_raw[, 1]
geneData_raw_noName = as.matrix(geneData_raw[, -1])
rownames(geneData_raw_noName) = spotLoc_char
# Dim: spots * genes =  5488 * 155
colnames(coord) = c("coord_x", "coord_y")
### Directly run PCA without taking log
n.PCs=50
tmpx = t(geneData_raw_noName)
sce <- SingleCellExperiment(assays=list(counts=tmpx),
colData = coord)
library(SingleCellExperiment)
### Directly run PCA without taking log
n.PCs=50
tmpx = t(geneData_raw_noName)
sce <- SingleCellExperiment(assays=list(counts=tmpx),
colData = coord)
sce = DataPreprocess(sce, n.PCs=50, norm.type="logOnly"),
select.hvg=FALSE, n.HVGs=2000)
sce = DataPreprocess(sce, n.PCs=50, norm.type="logOnly",
select.hvg=FALSE, n.HVGs=2000)
a_eta=0
b_eta=1.5
IGkappa=2
IGtau=10
dpAlpha=1
a_beta=1
tau_beta=1
tau0=0.01
tau1=0.05
M0=50
random_seed=100
platform="sc"
num_init=8
numOfMCMC=8
burnIn=0
# trunc_rbeta_by=10^(-3),
Is_beta_zero=FALSE
Is_warm_start=T
Is_print=T
print_gap=floor(numOfMCMC / 10)
Is_random_seed=T
Is_kmeans_use_mean_sd=T
ress = BACT(gene_data_pc = gene_data_pc, coord = coord, platform = platform,
num_init = num_init, num_nei = 6,
d1=3, R1_elem=0.5,
a_eta=0, b_eta=1.5, IGkappa=2, IGtau=10, dpAlpha=1,
a_beta=1, tau_beta=1, tau0=0.01, tau1=0.05, M0=50,
numOfMCMC=100, burnIn=0,
Is_beta_zero=FALSE, Is_warm_start=T,
Is_kmeans_use_mean_sd=T,
Is_print=TRUE, print_gap=50,
Is_random_seed=TRUE, random_seed=random_seed)
gene_data_pc = t(reducedDim(sce, "PCA"))
a_eta=0
b_eta=1.5
IGkappa=2
IGtau=10
dpAlpha=1
a_beta=1
tau_beta=1
tau0=0.01
tau1=0.05
M0=50
random_seed=100
platform="sc"
num_init=8
numOfMCMC=8
burnIn=0
# trunc_rbeta_by=10^(-3),
Is_beta_zero=FALSE
Is_warm_start=T
Is_print=T
print_gap=floor(numOfMCMC / 10)
Is_random_seed=T
Is_kmeans_use_mean_sd=T
ress = BACT(gene_data_pc = gene_data_pc, coord = coord, platform = platform,
num_init = num_init, num_nei = 6,
d1=3, R1_elem=0.5,
a_eta=0, b_eta=1.5, IGkappa=2, IGtau=10, dpAlpha=1,
a_beta=1, tau_beta=1, tau0=0.01, tau1=0.05, M0=50,
numOfMCMC=100, burnIn=0,
Is_beta_zero=FALSE, Is_warm_start=T,
Is_kmeans_use_mean_sd=T,
Is_print=TRUE, print_gap=50,
Is_random_seed=TRUE, random_seed=random_seed)
load("/Users/yyq/Documents/MyDocument/project/image (Bioinformatics)/code/校服务器共享集群/Benchmark_Nat_Method/merfish0.04/merfish_res/MERFISH04 S2 Ex6-3 Seed100 Num6 simple.RData")
aa1 = res_list$pottsBeta_mcmc[1:100]
aa2 = ress$pottsBeta_mcmc
sum(aa1 != aa2)
ress = BACT(gene_data_pc = gene_data_pc, coord = coord, platform = platform,
num_init = num_init, num_nei = 6,
d1=3, R1_elem=0.5,
a_eta=0, b_eta=1.5, IGkappa=2, IGtau=10, dpAlpha=1,
a_beta=1, tau_beta=1, tau0=0.01, tau1=0.05, M0=50,
numOfMCMC=200, burnIn=0,
Is_beta_zero=FALSE, Is_warm_start=T,
Is_kmeans_use_mean_sd=T,
Is_print=TRUE, print_gap=50,
Is_random_seed=TRUE, random_seed=random_seed)
aa1 = res_list$pottsBeta_mcmc[1:200]
aa2 = ress$pottsBeta_mcmc
sum(aa1 != aa2)
1.488 * 60 / 200
1.488 * 60 / 2
RootPath = "/Users/yyq/Documents/MyDocument/project/image (Bioinformatics)/code/Rpkg/test_data/STARmap"
coord = read.csv(paste0(RootPath, "coordinates.csv"))
RootPath = "/Users/yyq/Documents/MyDocument/project/image (Bioinformatics)/code/Rpkg/test_data/STARmap/"
coord = read.csv(paste0(RootPath, "coordinates.csv"))
geneData_raw = read.csv(paste0(RootPath, "gene_count_matrix_raw.csv"))
### preprocess gene expression matrix
spotLoc_char = geneData_raw[, 1]
geneData_raw_noName = as.matrix(geneData_raw[, -1])
rownames(geneData_raw_noName) = spotLoc_char
# Dim: spots * genes =  5488 * 155
colnames(coord) = c("coord_x", "coord_y")
### Directly run PCA without taking log
n.PCs=50
tmpx = t(geneData_raw_noName)
sce <- SingleCellExperiment(assays=list(counts=tmpx),
colData = coord)
sce = DataPreprocess(sce, n.PCs=50, norm.type="logNorm",
select.hvg=FALSE, n.HVGs=2000)
gene_data_pc = t(reducedDim(sce, "PCA"))
a_eta=0
b_eta=1.5
IGkappa=2
IGtau=10
dpAlpha=1
a_beta=1
tau_beta=1
tau0=0.01
tau1=0.05
M0=50
random_seed=99
platform="sc"
num_init=7
# trunc_rbeta_by=10^(-3),
Is_beta_zero=FALSE
Is_warm_start=T
Is_print=T
print_gap=floor(numOfMCMC / 10)
Is_random_seed=T
Is_kmeans_use_mean_sd=T
ress = BACT(gene_data_pc = gene_data_pc, coord = coord, platform = platform,
num_init = num_init, num_nei = 6,
d1=3, R1_elem=0.5,
a_eta=0, b_eta=1.5, IGkappa=2, IGtau=10, dpAlpha=1,
a_beta=1, tau_beta=1, tau0=0.01, tau1=0.05, M0=50,
numOfMCMC=200, burnIn=0,
Is_beta_zero=FALSE, Is_warm_start=T,
Is_kmeans_use_mean_sd=T,
Is_print=TRUE, print_gap=50,
Is_random_seed=TRUE, random_seed=random_seed)
load("/Users/yyq/Documents/MyDocument/project/image (Bioinformatics)/code/校服务器共享集群/Benchmark_Nat_Method/STARmap_star/STARmap_star_res/STARmap S1 Ex5-4 Seed99 Num6 simple.RData")
aa1 = res_list$pottsBeta_mcmc[1:200]
aa2 = ress$pottsBeta_mcmc
sum(aa1 != aa2)
aa1
aa2
ress = BACT(gene_data_pc = gene_data_pc, coord = coord, platform = platform,
num_init = num_init, num_nei = 6,
d1=3, R1_elem=0.5,
a_eta=0, b_eta=1.5, IGkappa=2, IGtau=10, dpAlpha=1,
a_beta=1, tau_beta=1, tau0=0.01, tau1=0.05, M0=50,
numOfMCMC=500, burnIn=0,
Is_beta_zero=FALSE, Is_warm_start=T,
Is_kmeans_use_mean_sd=T,
Is_print=TRUE, print_gap=50,
Is_random_seed=TRUE, random_seed=random_seed)
aa1 = res_list$pottsBeta_mcmc[1:500]
aa2 = ress$pottsBeta_mcmc
sum(aa1 != aa2)
remove(list=ls())
RootPath = "/Users/yyq/Documents/MyDocument/project/image (Bioinformatics)/code/Rpkg/test_data/STARmap/"
coord = read.csv(paste0(RootPath, "coordinates.csv"))
geneData_raw = read.csv(paste0(RootPath, "gene_count_matrix_raw.csv"))
### preprocess gene expression matrix
spotLoc_char = geneData_raw[, 1]
geneData_raw_noName = as.matrix(geneData_raw[, -1])
rownames(geneData_raw_noName) = spotLoc_char
# Dim: spots * genes =  5488 * 155
colnames(coord) = c("coord_x", "coord_y")
### Directly run PCA without taking log
n.PCs=50
tmpx = t(geneData_raw_noName)
sce <- SingleCellExperiment(assays=list(counts=tmpx),
colData = coord)
sce = DataPreprocess(sce, n.PCs=50, norm.type="logNorm",
select.hvg=FALSE, n.HVGs=2000)
gene_data_pc = t(reducedDim(sce, "PCA"))
save(gene_data_pc, coord, file = "./example_data.RData")
RootPath
remove.packages("BACT")
install.packages("/Users/yyq/Documents/MyDocument/project/image (Bioinformatics)/code/Rpkg/BACT1.0/BACT_1.0.tar.gz", repos = NULL, type="source")
library(BACT)
library(SingleCellExperiment)
data(example_data)
data(example_data)
load("/Users/yyq/Documents/MyDocument/project/image (Bioinformatics)/code/Rpkg/BACT1.0/BACT/data/example_data.RData")
remove.packages("BACT")
install.packages("/Users/yyq/Documents/MyDocument/project/image (Bioinformatics)/code/Rpkg/BACT1.0/BACT_1.0.tar.gz", repos = NULL, type="source")
library(BACT)
library(SingleCellExperiment)
#
data(example_data)
coord
RootPath = "/Users/yyq/Documents/MyDocument/project/image (Bioinformatics)/code/Rpkg/test_data/STARmap/"
coord = read.csv(paste0(RootPath, "coordinates.csv"))
geneData_raw = read.csv(paste0(RootPath, "gene_count_matrix_raw.csv"))
### preprocess gene expression matrix
spotLoc_char = geneData_raw[, 1]
geneData_raw_noName = as.matrix(geneData_raw[, -1])
rownames(geneData_raw_noName) = spotLoc_char
# Dim: spots * genes =  5488 * 155
colnames(coord) = c("coord_x", "coord_y")
### Directly run PCA without taking log
n.PCs=50
tmpx = t(geneData_raw_noName)
sce <- SingleCellExperiment(assays=list(counts=tmpx),
colData = coord)
sce = DataPreprocess(sce, n.PCs=50, norm.type="logNorm",
select.hvg=FALSE, n.HVGs=2000)
gene_data_pc = t(reducedDim(sce, "PCA"))
a_eta=0
b_eta=1.5
IGkappa=2
IGtau=10
dpAlpha=1
a_beta=1
tau_beta=1
tau0=0.01
tau1=0.05
M0=50
random_seed=99
platform="sc"
num_init=7
# trunc_rbeta_by=10^(-3),
Is_beta_zero=FALSE
Is_warm_start=T
Is_print=T
print_gap=floor(numOfMCMC / 10)
Is_random_seed=T
Is_kmeans_use_mean_sd=T
ress = BACT(gene_data_pc = gene_data_pc, coord = coord, platform = platform,
num_init = num_init, num_nei = 6,
d1=3, R1_elem=0.5,
a_eta=0, b_eta=1.5, IGkappa=2, IGtau=10, dpAlpha=1,
a_beta=1, tau_beta=1, tau0=0.01, tau1=0.05, M0=50,
numOfMCMC=500, burnIn=0,
Is_beta_zero=FALSE, Is_warm_start=T,
Is_kmeans_use_mean_sd=T,
Is_print=TRUE, print_gap=50,
Is_random_seed=TRUE, random_seed=random_seed)
load("/Users/yyq/Documents/MyDocument/project/image (Bioinformatics)/code/校服务器共享集群/Benchmark_Nat_Method/STARmap_star/STARmap_star_res/STARmap S1 Ex5-4 Seed99 Num6 simple.RData")
aa1 = res_list$pottsBeta_mcmc[1:500]
aa2 = ress$pottsBeta_mcmc
sum(aa1 != aa2)
install.packages("/Users/yyq/Documents/MyDocument/project/image (Bioinformatics)/code/Rpkg/BACT1.0/BACT_1.0.tar.gz", repos = NULL, type="source")
library(BACT)
library(SingleCellExperiment)
data(example_data)
a_eta=0
b_eta=1.5
IGkappa=2
IGtau=10
dpAlpha=1
a_beta=1
tau_beta=1
tau0=0.01
tau1=0.05
M0=50
random_seed=99
platform="sc"
num_init=7
# trunc_rbeta_by=10^(-3),
Is_beta_zero=FALSE
Is_warm_start=T
Is_print=T
print_gap=floor(numOfMCMC / 10)
Is_random_seed=T
Is_kmeans_use_mean_sd=T
ress = BACT(gene_data_pc = gene_data_pc, coord = coord, platform = platform,
num_init = num_init, num_nei = 6,
d1=3, R1_elem=0.5,
a_eta=0, b_eta=1.5, IGkappa=2, IGtau=10, dpAlpha=1,
a_beta=1, tau_beta=1, tau0=0.01, tau1=0.05, M0=50,
numOfMCMC=500, burnIn=0,
Is_beta_zero=FALSE, Is_warm_start=T,
Is_kmeans_use_mean_sd=T,
Is_print=TRUE, print_gap=50,
Is_random_seed=TRUE, random_seed=random_seed)
load("/Users/yyq/Documents/MyDocument/project/image (Bioinformatics)/code/校服务器共享集群/Benchmark_Nat_Method/STARmap_star/STARmap_star_res/STARmap S1 Ex5-4 Seed99 Num6 simple.RData")
aa1 = res_list$pottsBeta_mcmc[1:500]
aa2 = ress$pottsBeta_mcmc
sum(aa1 != aa2)
example("BACT")
## Set the working directory to the source file location
current_dir <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(current_dir)
print(getwd())
## Read raw data
coord = read.csv("../input_data/coordinates.csv")
library(SingleCellExperiment)
## Set the working directory to the source file location
current_dir <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(current_dir)
print(getwd())
## Read raw data
coord = read.csv("../input_data/coordinates.csv")
geneData_raw = read.csv("../input_data/gene_count_matrix_raw.csv")
truth_labels = read.csv("../input_data/cell_annotation_file.csv")$Annotation
truth_labels <- read.table("../input_data/cell_annotation_file.txt", header = TRUE, sep = "")
truth_labels = truth_labels$Annotation
spotLoc_char = geneData_raw[, 1]
geneData_raw_noName = as.matrix(geneData_raw[, -1])
rownames(geneData_raw_noName) = spotLoc_char
# Dim: cells * genes =  1207 * 1020
colnames(coord) = c("coord_x", "coord_y")
## Build SingleCellExperiment object
tmpx = t(geneData_raw_noName)
sce <- SingleCellExperiment(assays=list(counts=tmpx),
colData = coord)
install.packages("/Users/yyq/Documents/MyDocument/project/image (Bioinformatics)/code/Rpkg/BACT1.0/BACT_1.0.tar.gz", repos = NULL, type="source")
